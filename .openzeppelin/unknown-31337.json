{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe1557a132C708eFC7fb3D02051Ca5B31eeC64a17",
    "txHash": "0x0950fd414e40aafe94b7ae7bac73868dc886fc88595718274dd75da3693a5f06"
  },
  "proxies": [
    {
      "address": "0x65f957Da089fe87CB977BeC8179c93446F4a8D4F",
      "txHash": "0xda3f1a4cebc099d571dea0c96ab900a4c9db2fe3e2bc44ff7afcb7d15fb1d7e3",
      "kind": "transparent"
    },
    {
      "address": "0x53D493424694874Edb368144b60b5F36C6c70c37",
      "txHash": "0xf4954a71829b3dfa23c6cf67c57b354360e7cb696a1fbf9e9ac00c412c22c8a0",
      "kind": "transparent"
    },
    {
      "address": "0x31d87aCAf2DcDD24798d359E7eB7F28177A756E2",
      "txHash": "0xff3ee1e1b956976e081b0e886ddd1e3e4ddc3535c0aef30b6be401f26a1a661d",
      "kind": "transparent"
    },
    {
      "address": "0x077f991afBfBFe850FEeBC3FB3C82ed51C13BcFC",
      "txHash": "0x2c86f8f5c16b54b3422db7350b9d0219ba868302f1be8f4a541a4bade02784fa",
      "kind": "transparent"
    },
    {
      "address": "0x38557D7a455CA53fE5a22da8a44dA565f7e8e2d2",
      "txHash": "0xdd4eafd7e0b18f1b1b64580602bcb3f7afc0b69b213dd986e6f28351f70bc0ad",
      "kind": "transparent"
    },
    {
      "address": "0xB61000d49BBe241545a055c2664365Fb42e621cc",
      "txHash": "0x3a28ac72f7f71a4649eaa5e460527fbe88bb39cdc060049f2553f975b9af076b",
      "kind": "transparent"
    },
    {
      "address": "0x9a43d3d57B5E406486362d93415817b03D3Dde07",
      "txHash": "0x507136d0a52423ca10d4f7987d274c6e91a33ebef6203c7fa45ce3d1ad44f0f8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "25d510b33ac09596ddf0441a14de31775422a60116107df52a9b36ad6caf65cc": {
      "address": "0x0eD0bbDDBe7E832EdB930B3c705f18Ad11cCEC2c",
      "txHash": "0xab5e23b6e68ad54af8ab7a8bd9ec32646d67ddf0cdc5cd13c86c576893e70013",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f130d21af83f3a5d0330819a4a23d8cb16cbad566ceb1c57440c11c21fed791f": {
      "address": "0x4CE7ac4FC55C7A1Ae6a23085F7ac67EC50c8fF6F",
      "txHash": "0xd9204e58a3a955d34b43d98b26604de8d41e5234bb8b0088abacdfc0b625d6c6",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)6326",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:12"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "stUSD",
            "src": "contracts/stUSD.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "stUSD",
            "src": "contracts/stUSD.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)6326": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f462dbde1d5b4f7b55ceb3f6d1cb1d8d53ba582d5dd048aed846bb35d9d5fc22": {
      "address": "0x759b88f4131d4F3545fd52186636f7B5147C4ac8",
      "txHash": "0x0701d3edf1fa2b9442e70ca5202751580f9e6a5d3b581046efefdcb68f26cda4",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)6326",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:12"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:13"
          },
          {
            "label": "_lastRecordedDataFetch",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(RecordedDataFetch)6657_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:15"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)6326": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_struct(RecordedDataFetch)6657_storage": {
            "label": "struct IDataFeed.RecordedDataFetch",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "42b41257cb8478b778d2e82658fa9a59ec230a96a090609cd7b75e3042e4b20c": {
      "address": "0xE75E1112a793B05f6B5B04238704403E9074aA34",
      "txHash": "0x21174043b909513c181588bad5b416cf65e7c97342ec6d60520f374cb88fdd39",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)5612",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:12"
          },
          {
            "label": "etfDataFeed",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDataFeed)5821",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:27"
          },
          {
            "label": "stUSD",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IStUSD)6072",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:29"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:31"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:34"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(RedemptionRequest)4598_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:31"
          },
          {
            "label": "lastRequestId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:33"
          },
          {
            "label": "minUsdAmountToRedeem",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)51_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)51_storage": {
            "label": "uint256[51]",
            "numberOfBytes": "1632"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDataFeed)5821": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IStUSD)6072": {
            "label": "contract IStUSD",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)5612": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RedemptionRequest)4598_storage)": {
            "label": "mapping(uint256 => struct RedemptionVault.RedemptionRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RedemptionRequest)4598_storage": {
            "label": "struct RedemptionVault.RedemptionRequest",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountStUsdIn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "164f9c7ec0d1a9de0b0920e4da468afc4ce9c2076692da26d3ac267752a792d1": {
      "address": "0x976A659fc05072e06846c0A407512C6e1Fb51C5d",
      "txHash": "0x13c86ee6ada6d34e1a4f0052f68b38a7ea4894e1e8f0bb0da2a7e73e2b57fbba",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)5612",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:12"
          },
          {
            "label": "etfDataFeed",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDataFeed)5821",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:27"
          },
          {
            "label": "stUSD",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IStUSD)6072",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:29"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:31"
          },
          {
            "label": "_fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:34"
          },
          {
            "label": "minAmountToDepositInEuro",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:24"
          },
          {
            "label": "eurUsdDataFeed",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IDataFeed)5821",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:26"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDataFeed)5821": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IStUSD)6072": {
            "label": "contract IStUSD",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)5612": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
